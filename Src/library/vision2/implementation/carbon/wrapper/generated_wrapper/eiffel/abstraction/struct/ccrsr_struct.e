-- This file has been generated by EWG. Do not edit. Changes will be lost!

class CCRSR_STRUCT

inherit

	EWG_STRUCT

	CCRSR_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	crsrtype: INTEGER is
			-- Access member `crsrType'
		require
			exists: exists
		do
			Result := get_crsrtype_external (item)
		ensure
			result_correct: Result = get_crsrtype_external (item)
		end

	set_crsrtype (a_value: INTEGER) is
			-- Set member `crsrType'
		require
			exists: exists
		do
			set_crsrtype_external (item, a_value)
		ensure
			a_value_set: a_value = crsrtype
		end

	crsrmap: POINTER is
			-- Access member `crsrMap'
		require
			exists: exists
		do
			Result := get_crsrmap_external (item)
		ensure
			result_correct: Result = get_crsrmap_external (item)
		end

	set_crsrmap (a_value: POINTER) is
			-- Set member `crsrMap'
		require
			exists: exists
		do
			set_crsrmap_external (item, a_value)
		ensure
			a_value_set: a_value = crsrmap
		end

	crsrdata: POINTER is
			-- Access member `crsrData'
		require
			exists: exists
		do
			Result := get_crsrdata_external (item)
		ensure
			result_correct: Result = get_crsrdata_external (item)
		end

	set_crsrdata (a_value: POINTER) is
			-- Set member `crsrData'
		require
			exists: exists
		do
			set_crsrdata_external (item, a_value)
		ensure
			a_value_set: a_value = crsrdata
		end

	crsrxdata: POINTER is
			-- Access member `crsrXData'
		require
			exists: exists
		do
			Result := get_crsrxdata_external (item)
		ensure
			result_correct: Result = get_crsrxdata_external (item)
		end

	set_crsrxdata (a_value: POINTER) is
			-- Set member `crsrXData'
		require
			exists: exists
		do
			set_crsrxdata_external (item, a_value)
		ensure
			a_value_set: a_value = crsrxdata
		end

	crsrxvalid: INTEGER is
			-- Access member `crsrXValid'
		require
			exists: exists
		do
			Result := get_crsrxvalid_external (item)
		ensure
			result_correct: Result = get_crsrxvalid_external (item)
		end

	set_crsrxvalid (a_value: INTEGER) is
			-- Set member `crsrXValid'
		require
			exists: exists
		do
			set_crsrxvalid_external (item, a_value)
		ensure
			a_value_set: a_value = crsrxvalid
		end

	crsrxhandle: POINTER is
			-- Access member `crsrXHandle'
		require
			exists: exists
		do
			Result := get_crsrxhandle_external (item)
		ensure
			result_correct: Result = get_crsrxhandle_external (item)
		end

	set_crsrxhandle (a_value: POINTER) is
			-- Set member `crsrXHandle'
		require
			exists: exists
		do
			set_crsrxhandle_external (item, a_value)
		ensure
			a_value_set: a_value = crsrxhandle
		end

	crsr1data: POINTER is
			-- Access member `crsr1Data'
		require
			exists: exists
		do
			Result := get_crsr1data_external (item)
		ensure
			result_correct: Result = get_crsr1data_external (item)
		end

	crsrmask: POINTER is
			-- Access member `crsrMask'
		require
			exists: exists
		do
			Result := get_crsrmask_external (item)
		ensure
			result_correct: Result = get_crsrmask_external (item)
		end

	crsrhotspot: POINTER is
			-- Access member `crsrHotSpot'
		require
			exists: exists
		do
			Result := get_crsrhotspot_external (item)
		ensure
			result_correct: Result = get_crsrhotspot_external (item)
		end

	set_crsrhotspot (a_value: POINTER) is
			-- Set member `crsrHotSpot'
		require
			exists: exists
		do
			set_crsrhotspot_external (item, a_value)
		end

	crsrxtable: INTEGER is
			-- Access member `crsrXTable'
		require
			exists: exists
		do
			Result := get_crsrxtable_external (item)
		ensure
			result_correct: Result = get_crsrxtable_external (item)
		end

	set_crsrxtable (a_value: INTEGER) is
			-- Set member `crsrXTable'
		require
			exists: exists
		do
			set_crsrxtable_external (item, a_value)
		ensure
			a_value_set: a_value = crsrxtable
		end

	crsrid: INTEGER is
			-- Access member `crsrID'
		require
			exists: exists
		do
			Result := get_crsrid_external (item)
		ensure
			result_correct: Result = get_crsrid_external (item)
		end

	set_crsrid (a_value: INTEGER) is
			-- Set member `crsrID'
		require
			exists: exists
		do
			set_crsrid_external (item, a_value)
		ensure
			a_value_set: a_value = crsrid
		end

end
