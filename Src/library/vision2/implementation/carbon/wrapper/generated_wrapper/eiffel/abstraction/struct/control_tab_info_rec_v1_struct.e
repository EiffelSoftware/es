-- This file has been generated by EWG. Do not edit. Changes will be lost!

class CONTROL_TAB_INFO_REC_V1_STRUCT

inherit

	EWG_STRUCT

	CONTROL_TAB_INFO_REC_V1_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {NONE} -- Implementation

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	get_version: INTEGER is
		obsolete "Use `version' instead."
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	version: INTEGER is
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	set_version (a_value: INTEGER) is
			-- Set member `version'
		require
			exists: exists
		do
			set_version_external (item, a_value)
		ensure
			a_value_set: a_value = version
		end

	get_iconsuiteid: INTEGER is
		obsolete "Use `iconsuiteid' instead."
			-- Access member `iconSuiteID'
		require
			exists: exists
		do
			Result := get_iconsuiteid_external (item)
		ensure
			result_correct: Result = get_iconsuiteid_external (item)
		end

	iconsuiteid: INTEGER is
			-- Access member `iconSuiteID'
		require
			exists: exists
		do
			Result := get_iconsuiteid_external (item)
		ensure
			result_correct: Result = get_iconsuiteid_external (item)
		end

	set_iconsuiteid (a_value: INTEGER) is
			-- Set member `iconSuiteID'
		require
			exists: exists
		do
			set_iconsuiteid_external (item, a_value)
		ensure
			a_value_set: a_value = iconsuiteid
		end

	name_struct: CFSTRING_STRUCT is
			-- Access member `name'
		require
			exists: exists
		do
			create Result.make_shared (get_name_external (item))
		ensure
			result_not_void: Result /= Void
			result_has_correct_item: Result.item = name
		end

	set_name_struct (a_value: CFSTRING_STRUCT) is
			-- Set member `name'
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_name_external (item, a_value.item)
		ensure
			a_value_set: a_value.item = name
		end

	get_name: POINTER is
		obsolete "Use `name' instead."
			-- Access member `name'
		require
			exists: exists
		do
			Result := get_name_external (item)
		ensure
			result_correct: Result = get_name_external (item)
		end

	name: POINTER is
			-- Access member `name'
		require
			exists: exists
		do
			Result := get_name_external (item)
		ensure
			result_correct: Result = get_name_external (item)
		end

	set_name (a_value: POINTER) is
			-- Set member `name'
		require
			exists: exists
		do
			set_name_external (item, a_value)
		ensure
			a_value_set: a_value = name
		end

end
