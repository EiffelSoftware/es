-- This file has been generated by EWG. Do not edit. Changes will be lost!

class CURSOR_INFO_STRUCT

inherit

	EWG_STRUCT

	CURSOR_INFO_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {NONE} -- Implementation

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	get_version: INTEGER is
		obsolete "Use `version' instead."
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	version: INTEGER is
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	set_version (a_value: INTEGER) is
			-- Set member `version'
		require
			exists: exists
		do
			set_version_external (item, a_value)
		ensure
			a_value_set: a_value = version
		end

	get_capabilities: INTEGER is
		obsolete "Use `capabilities' instead."
			-- Access member `capabilities'
		require
			exists: exists
		do
			Result := get_capabilities_external (item)
		ensure
			result_correct: Result = get_capabilities_external (item)
		end

	capabilities: INTEGER is
			-- Access member `capabilities'
		require
			exists: exists
		do
			Result := get_capabilities_external (item)
		ensure
			result_correct: Result = get_capabilities_external (item)
		end

	set_capabilities (a_value: INTEGER) is
			-- Set member `capabilities'
		require
			exists: exists
		do
			set_capabilities_external (item, a_value)
		ensure
			a_value_set: a_value = capabilities
		end

	get_animateduration: INTEGER is
		obsolete "Use `animateduration' instead."
			-- Access member `animateDuration'
		require
			exists: exists
		do
			Result := get_animateduration_external (item)
		ensure
			result_correct: Result = get_animateduration_external (item)
		end

	animateduration: INTEGER is
			-- Access member `animateDuration'
		require
			exists: exists
		do
			Result := get_animateduration_external (item)
		ensure
			result_correct: Result = get_animateduration_external (item)
		end

	set_animateduration (a_value: INTEGER) is
			-- Set member `animateDuration'
		require
			exists: exists
		do
			set_animateduration_external (item, a_value)
		ensure
			a_value_set: a_value = animateduration
		end

	get_bounds: POINTER is
		obsolete "Use `bounds' instead."
			-- Access member `bounds'
		require
			exists: exists
		do
			Result := get_bounds_external (item)
		ensure
			result_correct: Result = get_bounds_external (item)
		end

	bounds: POINTER is
			-- Access member `bounds'
		require
			exists: exists
		do
			Result := get_bounds_external (item)
		ensure
			result_correct: Result = get_bounds_external (item)
		end

	set_bounds (a_value: POINTER) is
			-- Set member `bounds'
		require
			exists: exists
		do
			set_bounds_external (item, a_value)
		end

	get_hotspot: POINTER is
		obsolete "Use `hotspot' instead."
			-- Access member `hotspot'
		require
			exists: exists
		do
			Result := get_hotspot_external (item)
		ensure
			result_correct: Result = get_hotspot_external (item)
		end

	hotspot: POINTER is
			-- Access member `hotspot'
		require
			exists: exists
		do
			Result := get_hotspot_external (item)
		ensure
			result_correct: Result = get_hotspot_external (item)
		end

	set_hotspot (a_value: POINTER) is
			-- Set member `hotspot'
		require
			exists: exists
		do
			set_hotspot_external (item, a_value)
		end

	get_reserved: INTEGER is
		obsolete "Use `reserved' instead."
			-- Access member `reserved'
		require
			exists: exists
		do
			Result := get_reserved_external (item)
		ensure
			result_correct: Result = get_reserved_external (item)
		end

	reserved: INTEGER is
			-- Access member `reserved'
		require
			exists: exists
		do
			Result := get_reserved_external (item)
		ensure
			result_correct: Result = get_reserved_external (item)
		end

	set_reserved (a_value: INTEGER) is
			-- Set member `reserved'
		require
			exists: exists
		do
			set_reserved_external (item, a_value)
		ensure
			a_value_set: a_value = reserved
		end

end
