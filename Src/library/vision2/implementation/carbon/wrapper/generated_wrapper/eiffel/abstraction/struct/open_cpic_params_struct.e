-- This file has been generated by EWG. Do not edit. Changes will be lost!

class OPEN_CPIC_PARAMS_STRUCT

inherit

	EWG_STRUCT

	OPEN_CPIC_PARAMS_STRUCT_EXTERNAL
		export
			{NONE} all
		end

create

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {ANY} -- Access

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	srcrect: POINTER is
			-- Access member `srcRect'
		require
			exists: exists
		do
			Result := get_srcrect_external (item)
		ensure
			result_correct: Result = get_srcrect_external (item)
		end

	set_srcrect (a_value: POINTER) is
			-- Set member `srcRect'
		require
			exists: exists
		do
			set_srcrect_external (item, a_value)
		end

	hres: INTEGER is
			-- Access member `hRes'
		require
			exists: exists
		do
			Result := get_hres_external (item)
		ensure
			result_correct: Result = get_hres_external (item)
		end

	set_hres (a_value: INTEGER) is
			-- Set member `hRes'
		require
			exists: exists
		do
			set_hres_external (item, a_value)
		ensure
			a_value_set: a_value = hres
		end

	vres: INTEGER is
			-- Access member `vRes'
		require
			exists: exists
		do
			Result := get_vres_external (item)
		ensure
			result_correct: Result = get_vres_external (item)
		end

	set_vres (a_value: INTEGER) is
			-- Set member `vRes'
		require
			exists: exists
		do
			set_vres_external (item, a_value)
		ensure
			a_value_set: a_value = vres
		end

	version: INTEGER is
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	set_version (a_value: INTEGER) is
			-- Set member `version'
		require
			exists: exists
		do
			set_version_external (item, a_value)
		ensure
			a_value_set: a_value = version
		end

	reserved1: INTEGER is
			-- Access member `reserved1'
		require
			exists: exists
		do
			Result := get_reserved1_external (item)
		ensure
			result_correct: Result = get_reserved1_external (item)
		end

	set_reserved1 (a_value: INTEGER) is
			-- Set member `reserved1'
		require
			exists: exists
		do
			set_reserved1_external (item, a_value)
		ensure
			a_value_set: a_value = reserved1
		end

	reserved2: INTEGER is
			-- Access member `reserved2'
		require
			exists: exists
		do
			Result := get_reserved2_external (item)
		ensure
			result_correct: Result = get_reserved2_external (item)
		end

	set_reserved2 (a_value: INTEGER) is
			-- Set member `reserved2'
		require
			exists: exists
		do
			set_reserved2_external (item, a_value)
		ensure
			a_value_set: a_value = reserved2
		end

end
