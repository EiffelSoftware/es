-- This file has been generated by EWG. Do not edit. Changes will be lost!

class PIX_PAT_STRUCT

inherit

	EWG_STRUCT

	PIX_PAT_STRUCT_EXTERNAL
		export
			{NONE} all
		end

creation

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {NONE} -- Implementation

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	get_pattype: INTEGER is
		obsolete "Use `pattype' instead."
			-- Access member `patType'
		require
			exists: exists
		do
			Result := get_pattype_external (item)
		ensure
			result_correct: Result = get_pattype_external (item)
		end

	pattype: INTEGER is
			-- Access member `patType'
		require
			exists: exists
		do
			Result := get_pattype_external (item)
		ensure
			result_correct: Result = get_pattype_external (item)
		end

	set_pattype (a_value: INTEGER) is
			-- Set member `patType'
		require
			exists: exists
		do
			set_pattype_external (item, a_value)
		ensure
			a_value_set: a_value = pattype
		end

	get_patmap: POINTER is
		obsolete "Use `patmap' instead."
			-- Access member `patMap'
		require
			exists: exists
		do
			Result := get_patmap_external (item)
		ensure
			result_correct: Result = get_patmap_external (item)
		end

	patmap: POINTER is
			-- Access member `patMap'
		require
			exists: exists
		do
			Result := get_patmap_external (item)
		ensure
			result_correct: Result = get_patmap_external (item)
		end

	set_patmap (a_value: POINTER) is
			-- Set member `patMap'
		require
			exists: exists
		do
			set_patmap_external (item, a_value)
		ensure
			a_value_set: a_value = patmap
		end

	get_patdata: POINTER is
		obsolete "Use `patdata' instead."
			-- Access member `patData'
		require
			exists: exists
		do
			Result := get_patdata_external (item)
		ensure
			result_correct: Result = get_patdata_external (item)
		end

	patdata: POINTER is
			-- Access member `patData'
		require
			exists: exists
		do
			Result := get_patdata_external (item)
		ensure
			result_correct: Result = get_patdata_external (item)
		end

	set_patdata (a_value: POINTER) is
			-- Set member `patData'
		require
			exists: exists
		do
			set_patdata_external (item, a_value)
		ensure
			a_value_set: a_value = patdata
		end

	get_patxdata: POINTER is
		obsolete "Use `patxdata' instead."
			-- Access member `patXData'
		require
			exists: exists
		do
			Result := get_patxdata_external (item)
		ensure
			result_correct: Result = get_patxdata_external (item)
		end

	patxdata: POINTER is
			-- Access member `patXData'
		require
			exists: exists
		do
			Result := get_patxdata_external (item)
		ensure
			result_correct: Result = get_patxdata_external (item)
		end

	set_patxdata (a_value: POINTER) is
			-- Set member `patXData'
		require
			exists: exists
		do
			set_patxdata_external (item, a_value)
		ensure
			a_value_set: a_value = patxdata
		end

	get_patxvalid: INTEGER is
		obsolete "Use `patxvalid' instead."
			-- Access member `patXValid'
		require
			exists: exists
		do
			Result := get_patxvalid_external (item)
		ensure
			result_correct: Result = get_patxvalid_external (item)
		end

	patxvalid: INTEGER is
			-- Access member `patXValid'
		require
			exists: exists
		do
			Result := get_patxvalid_external (item)
		ensure
			result_correct: Result = get_patxvalid_external (item)
		end

	set_patxvalid (a_value: INTEGER) is
			-- Set member `patXValid'
		require
			exists: exists
		do
			set_patxvalid_external (item, a_value)
		ensure
			a_value_set: a_value = patxvalid
		end

	get_patxmap: POINTER is
		obsolete "Use `patxmap' instead."
			-- Access member `patXMap'
		require
			exists: exists
		do
			Result := get_patxmap_external (item)
		ensure
			result_correct: Result = get_patxmap_external (item)
		end

	patxmap: POINTER is
			-- Access member `patXMap'
		require
			exists: exists
		do
			Result := get_patxmap_external (item)
		ensure
			result_correct: Result = get_patxmap_external (item)
		end

	set_patxmap (a_value: POINTER) is
			-- Set member `patXMap'
		require
			exists: exists
		do
			set_patxmap_external (item, a_value)
		ensure
			a_value_set: a_value = patxmap
		end

	get_pat1data: POINTER is
		obsolete "Use `pat1data' instead."
			-- Access member `pat1Data'
		require
			exists: exists
		do
			Result := get_pat1data_external (item)
		ensure
			result_correct: Result = get_pat1data_external (item)
		end

	pat1data: POINTER is
			-- Access member `pat1Data'
		require
			exists: exists
		do
			Result := get_pat1data_external (item)
		ensure
			result_correct: Result = get_pat1data_external (item)
		end

	set_pat1data (a_value: POINTER) is
			-- Set member `pat1Data'
		require
			exists: exists
		do
			set_pat1data_external (item, a_value)
		end

end
