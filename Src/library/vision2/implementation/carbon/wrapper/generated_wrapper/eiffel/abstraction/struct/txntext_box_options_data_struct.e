-- This file has been generated by EWG. Do not edit. Changes will be lost!

class TXNTEXT_BOX_OPTIONS_DATA_STRUCT

inherit

	EWG_STRUCT

	TXNTEXT_BOX_OPTIONS_DATA_STRUCT_EXTERNAL
		export
			{NONE} all
		end

creation

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {NONE} -- Implementation

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	get_optiontags: INTEGER is
		obsolete "Use `optiontags' instead."
			-- Access member `optionTags'
		require
			exists: exists
		do
			Result := get_optiontags_external (item)
		ensure
			result_correct: Result = get_optiontags_external (item)
		end

	optiontags: INTEGER is
			-- Access member `optionTags'
		require
			exists: exists
		do
			Result := get_optiontags_external (item)
		ensure
			result_correct: Result = get_optiontags_external (item)
		end

	set_optiontags (a_value: INTEGER) is
			-- Set member `optionTags'
		require
			exists: exists
		do
			set_optiontags_external (item, a_value)
		ensure
			a_value_set: a_value = optiontags
		end

	get_flushness: INTEGER is
		obsolete "Use `flushness' instead."
			-- Access member `flushness'
		require
			exists: exists
		do
			Result := get_flushness_external (item)
		ensure
			result_correct: Result = get_flushness_external (item)
		end

	flushness: INTEGER is
			-- Access member `flushness'
		require
			exists: exists
		do
			Result := get_flushness_external (item)
		ensure
			result_correct: Result = get_flushness_external (item)
		end

	set_flushness (a_value: INTEGER) is
			-- Set member `flushness'
		require
			exists: exists
		do
			set_flushness_external (item, a_value)
		ensure
			a_value_set: a_value = flushness
		end

	get_justification: INTEGER is
		obsolete "Use `justification' instead."
			-- Access member `justification'
		require
			exists: exists
		do
			Result := get_justification_external (item)
		ensure
			result_correct: Result = get_justification_external (item)
		end

	justification: INTEGER is
			-- Access member `justification'
		require
			exists: exists
		do
			Result := get_justification_external (item)
		ensure
			result_correct: Result = get_justification_external (item)
		end

	set_justification (a_value: INTEGER) is
			-- Set member `justification'
		require
			exists: exists
		do
			set_justification_external (item, a_value)
		ensure
			a_value_set: a_value = justification
		end

	get_rotation: INTEGER is
		obsolete "Use `rotation' instead."
			-- Access member `rotation'
		require
			exists: exists
		do
			Result := get_rotation_external (item)
		ensure
			result_correct: Result = get_rotation_external (item)
		end

	rotation: INTEGER is
			-- Access member `rotation'
		require
			exists: exists
		do
			Result := get_rotation_external (item)
		ensure
			result_correct: Result = get_rotation_external (item)
		end

	set_rotation (a_value: INTEGER) is
			-- Set member `rotation'
		require
			exists: exists
		do
			set_rotation_external (item, a_value)
		ensure
			a_value_set: a_value = rotation
		end

	get_options: POINTER is
		obsolete "Use `options' instead."
			-- Access member `options'
		require
			exists: exists
		do
			Result := get_options_external (item)
		ensure
			result_correct: Result = get_options_external (item)
		end

	options: POINTER is
			-- Access member `options'
		require
			exists: exists
		do
			Result := get_options_external (item)
		ensure
			result_correct: Result = get_options_external (item)
		end

	set_options (a_value: POINTER) is
			-- Set member `options'
		require
			exists: exists
		do
			set_options_external (item, a_value)
		ensure
			a_value_set: a_value = options
		end

end
