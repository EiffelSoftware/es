-- This file has been generated by EWG. Do not edit. Changes will be lost!

class HMHELP_CONTENT_REC_STRUCT

inherit

	EWG_STRUCT

	HMHELP_CONTENT_REC_STRUCT_EXTERNAL
		export
			{NONE} all
		end

creation

	make_new_unshared,
	make_new_shared,
	make_unshared,
	make_shared

feature {NONE} -- Implementation

	sizeof: INTEGER is
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	get_version: INTEGER is
		obsolete "Use `version' instead."
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	version: INTEGER is
			-- Access member `version'
		require
			exists: exists
		do
			Result := get_version_external (item)
		ensure
			result_correct: Result = get_version_external (item)
		end

	set_version (a_value: INTEGER) is
			-- Set member `version'
		require
			exists: exists
		do
			set_version_external (item, a_value)
		ensure
			a_value_set: a_value = version
		end

	get_abshotrect: POINTER is
		obsolete "Use `abshotrect' instead."
			-- Access member `absHotRect'
		require
			exists: exists
		do
			Result := get_abshotrect_external (item)
		ensure
			result_correct: Result = get_abshotrect_external (item)
		end

	abshotrect: POINTER is
			-- Access member `absHotRect'
		require
			exists: exists
		do
			Result := get_abshotrect_external (item)
		ensure
			result_correct: Result = get_abshotrect_external (item)
		end

	set_abshotrect (a_value: POINTER) is
			-- Set member `absHotRect'
		require
			exists: exists
		do
			set_abshotrect_external (item, a_value)
		end

	get_tagside: INTEGER is
		obsolete "Use `tagside' instead."
			-- Access member `tagSide'
		require
			exists: exists
		do
			Result := get_tagside_external (item)
		ensure
			result_correct: Result = get_tagside_external (item)
		end

	tagside: INTEGER is
			-- Access member `tagSide'
		require
			exists: exists
		do
			Result := get_tagside_external (item)
		ensure
			result_correct: Result = get_tagside_external (item)
		end

	set_tagside (a_value: INTEGER) is
			-- Set member `tagSide'
		require
			exists: exists
		do
			set_tagside_external (item, a_value)
		ensure
			a_value_set: a_value = tagside
		end

	get_content: POINTER is
		obsolete "Use `content' instead."
			-- Access member `content'
		require
			exists: exists
		do
			Result := get_content_external (item)
		ensure
			result_correct: Result = get_content_external (item)
		end

	content: POINTER is
			-- Access member `content'
		require
			exists: exists
		do
			Result := get_content_external (item)
		ensure
			result_correct: Result = get_content_external (item)
		end

end
