<?xml version="1.0"?>

<project name="EIFFELSOFTWARE_SET_VERSION" default="help">
	<description>
		description: "set version in CONSTANTS class for EiffelStudio"
		author: "Jocelyn Fiat and others"
		note: "This script could be split into severals scripts, one for each product"
	</description>
	<inherit>
		<parent location="${EIFFELSOFTWARE_SET_VERSION.absdir}/misc/_common_.eant">
		</parent>
	</inherit>

	<target name="help">
		<echo message="usage:"/>
		<echo message=" geant  set_version -AA_filename={filename}" />
	</target>	

	<!-- end of set_version -->
	<target name="set_version">
		<argument name="A_filename" />
		<geant target="set_version_from" arguments="$cwd,$A_filename" />
	</target>

	<target name="set_version_from">
		<argument name="A_dir" />
		<argument name="A_filename" />
		<echo message="Set version of ${A_filename} from ${A_dir}" />

		<exec executable="sed --version > nul"  accept_errors="true" exit_code_variable="return_code" if="${is_windows}"/>
		<exec executable="sed -n -f /dev/null &lt; /dev/null"  accept_errors="true" exit_code_variable="return_code" unless="${is_windows}" />		
		<echo message="Warning: sed is not found, thus the revision number won't be updated." unless="${return_code}=0" />
		<local name="sed_available" value="true" if="${return_code}=0" />

		<geant target="internal_set_version" arguments="$A_dir,$A_filename" if="$sed_available" />
	</target>

	<target name="internal_set_version">
		<argument name="A_dir" />
		<argument name="A_filename" />
		<geant target="set_version_windows" arguments="$A_dir,$A_filename" if="$is_windows" />
		<geant target="set_version_unix" arguments="$A_dir,$A_filename" unless="$is_windows" />
	</target>

	<target name="set_version_windows" depend="init" if="${is_windows}" >
		<argument name="A_dir" />
		<argument name="A_filename" />
		<local name="set_version_fn" value="${cwd}\tmp_b_set_version.bat" />
		<echo to_file="${set_version_fn}" append="false" >
@echo off
rem Set Version
rem %1 : wc path
rem %2 : filename.e
setlocal
set WCT=%1
set EFILE=%2
set EFILE_TMP=%EFILE%.tmp
set LC_MESSAGES=C

set T_CWD=%CD%
cd %WCT%
FOR /F "tokens=* USEBACKQ" %%F IN (`git rev-list HEAD ^| wc -l`) DO (
SET BUILDNUMBER=%%F
)
ECHO BUILDNUMBER=%BUILDNUMBER%
if .%BUILDNUMBER%. == .. set BUILDNUMBER=0000 -- Script was unable to set this value

for /f %%x in ('wmic path win32_utctime get /format:list ^| findstr &quot;=&quot;') do set %%x
 IF %month% LSS 10 SET month=0%month%
 IF %day% LSS 10 SET day=0%day%
 IF %hour% LSS 10 SET hour=0%hour%
 IF %minute% LSS 10 SET minute=0%minute%
 IF %second% LSS 10 SET second=0%second%
set CURRDATE=%Year%-%Month%-%Day%
set CURRTIME=%hour%:%minute%:%second%

cd %T_CWD%
echo Set build number: BUILDNUMBER=%BUILDNUMBER%
git checkout -- %EFILE%
sed -e &quot;s/:= 0000/:= %BUILDNUMBER%/&quot; %EFILE% &gt; %EFILE_TMP%
move %EFILE_TMP% %EFILE%

rem update the version_info ...
sed -e &quot;s/Version_info:\ STRING\ =\ \&quot;[0-9a-zA-Z_\,\ \/\:()\.\=\-]*\&quot;/Version_info:\ STRING\ =\ \&quot;Build:\ %BUILDNUMBER% , Compilation:\ %CURRDATE%\ %CURRTIME% , Builder:\ %USERNAME%\&quot;/g&quot; %EFILE% &gt; %EFILE_TMP%
move %EFILE_TMP% %EFILE%

endlocal
@echo on
		</echo>
		<echo message="cwd = $cwd " />
		<exec executable="type ${set_version_fn} > test.bat" dir="${A_dir}" />
		<exec executable="${set_version_fn} ${EIFFEL_SRC} ${A_filename}" dir="${A_dir}"
			accept_errors="true" exit_code_variable="no_return_code" />
		<unset name="no_return_code" />
		<delete file="${set_version_fn}" />
	</target>

	<target name="set_version_unix" depend="init" unless="${is_windows}" >
		<argument name="A_dir" />
		<argument name="A_filename" />
		<local name="set_version_fn" value="${cwd}/tmp_b_set_version.sh" />
		<echo to_file="${set_version_fn}" append="false" >
#!/bin/sh

# set build number in $2 to the git commits count number.
# $1 = Working directory
# $2 = file to process if any, otherwise display version on output

LC_MESSAGES=C

TMP_CWD=`pwd`
cd $1
computed_build_number=`git rev-list HEAD | wc -l`
cd $TMP_CWD
TMP_CWD=

if test "$computed_build_number" = "" ; then
	echo bad
	computed_build_number='0000 -- Script was unable to set this value'
fi
if test "$2" = "" ; then
	echo $computed_build_number
else
	echo Set build number: $computed_build_number
	git checkout -- $2
	sed -e "s/:= 0000/:= $computed_build_number/" $2 &gt; tmp
	mv tmp $2
fi
		</echo>
		<exec executable="/bin/sh ${set_version_fn} ${EIFFEL_SRC} ${A_filename}" dir="${A_dir}" 
			accept_errors="true" />
		<delete file="${set_version_fn}" />
	</target>

	<!-- end of set_version -->
</project>
