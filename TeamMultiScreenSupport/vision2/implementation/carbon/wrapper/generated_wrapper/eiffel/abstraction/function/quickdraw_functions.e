-- This file has been generated by EWG. Do not edit. Changes will be lost!
-- functions wrapper
class QUICKDRAW_FUNCTIONS

obsolete
	"Use class QUICKDRAW_FUNCTIONS_EXTERNAL instead."

inherit

	QUICKDRAW_FUNCTIONS_EXTERNAL

feature
	new_qdtext_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdtext_upp_external (userroutine)
		end

	new_qdline_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdline_upp_external (userroutine)
		end

	new_qdrect_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdrect_upp_external (userroutine)
		end

	new_qdrrect_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdrrect_upp_external (userroutine)
		end

	new_qdoval_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdoval_upp_external (userroutine)
		end

	new_qdarc_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdarc_upp_external (userroutine)
		end

	new_qdpoly_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdpoly_upp_external (userroutine)
		end

	new_qdrgn_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdrgn_upp_external (userroutine)
		end

	new_qdbits_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdbits_upp_external (userroutine)
		end

	new_qdcomment_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdcomment_upp_external (userroutine)
		end

	new_qdtx_meas_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdtx_meas_upp_external (userroutine)
		end

	new_qdget_pic_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdget_pic_upp_external (userroutine)
		end

	new_qdput_pic_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdput_pic_upp_external (userroutine)
		end

	new_qdopcode_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdopcode_upp_external (userroutine)
		end

	new_qdstd_glyphs_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdstd_glyphs_upp_external (userroutine)
		end

	new_qdjshield_cursor_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_qdjshield_cursor_upp_external (userroutine)
		end

	dispose_qdtext_upp (userupp: POINTER) is
		local
		do
			dispose_qdtext_upp_external (userupp)
		end

	dispose_qdline_upp (userupp: POINTER) is
		local
		do
			dispose_qdline_upp_external (userupp)
		end

	dispose_qdrect_upp (userupp: POINTER) is
		local
		do
			dispose_qdrect_upp_external (userupp)
		end

	dispose_qdrrect_upp (userupp: POINTER) is
		local
		do
			dispose_qdrrect_upp_external (userupp)
		end

	dispose_qdoval_upp (userupp: POINTER) is
		local
		do
			dispose_qdoval_upp_external (userupp)
		end

	dispose_qdarc_upp (userupp: POINTER) is
		local
		do
			dispose_qdarc_upp_external (userupp)
		end

	dispose_qdpoly_upp (userupp: POINTER) is
		local
		do
			dispose_qdpoly_upp_external (userupp)
		end

	dispose_qdrgn_upp (userupp: POINTER) is
		local
		do
			dispose_qdrgn_upp_external (userupp)
		end

	dispose_qdbits_upp (userupp: POINTER) is
		local
		do
			dispose_qdbits_upp_external (userupp)
		end

	dispose_qdcomment_upp (userupp: POINTER) is
		local
		do
			dispose_qdcomment_upp_external (userupp)
		end

	dispose_qdtx_meas_upp (userupp: POINTER) is
		local
		do
			dispose_qdtx_meas_upp_external (userupp)
		end

	dispose_qdget_pic_upp (userupp: POINTER) is
		local
		do
			dispose_qdget_pic_upp_external (userupp)
		end

	dispose_qdput_pic_upp (userupp: POINTER) is
		local
		do
			dispose_qdput_pic_upp_external (userupp)
		end

	dispose_qdopcode_upp (userupp: POINTER) is
		local
		do
			dispose_qdopcode_upp_external (userupp)
		end

	dispose_qdstd_glyphs_upp (userupp: POINTER) is
		local
		do
			dispose_qdstd_glyphs_upp_external (userupp)
		end

	dispose_qdjshield_cursor_upp (userupp: POINTER) is
		local
		do
			dispose_qdjshield_cursor_upp_external (userupp)
		end

	invoke_qdtext_upp (bytecount: INTEGER; textbuf: POINTER; numer: POINTER; denom: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdtext_upp_external (bytecount, textbuf, numer, denom, userupp)
		end

	invoke_qdline_upp (newpt: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdline_upp_external (newpt, userupp)
		end

	invoke_qdrect_upp (verb: INTEGER; r: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdrect_upp_external (verb, r, userupp)
		end

	invoke_qdrrect_upp (verb: INTEGER; r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER; userupp: POINTER) is
		local
		do
			invoke_qdrrect_upp_external (verb, r, ovalwidth, ovalheight, userupp)
		end

	invoke_qdoval_upp (verb: INTEGER; r: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdoval_upp_external (verb, r, userupp)
		end

	invoke_qdarc_upp (verb: INTEGER; r: POINTER; startangle: INTEGER; arcangle: INTEGER; userupp: POINTER) is
		local
		do
			invoke_qdarc_upp_external (verb, r, startangle, arcangle, userupp)
		end

	invoke_qdpoly_upp (verb: INTEGER; poly: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdpoly_upp_external (verb, poly, userupp)
		end

	invoke_qdrgn_upp (verb: INTEGER; rgn: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdrgn_upp_external (verb, rgn, userupp)
		end

	invoke_qdbits_upp (srcbits: POINTER; srcrect: POINTER; dstrect: POINTER; mode: INTEGER; maskrgn: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdbits_upp_external (srcbits, srcrect, dstrect, mode, maskrgn, userupp)
		end

	invoke_qdcomment_upp (kind: INTEGER; datasize: INTEGER; datahandle: POINTER; userupp: POINTER) is
		local
		do
			invoke_qdcomment_upp_external (kind, datasize, datahandle, userupp)
		end

	invoke_qdtx_meas_upp (bytecount: INTEGER; textaddr: POINTER; numer: POINTER; denom: POINTER; info: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_qdtx_meas_upp_external (bytecount, textaddr, numer, denom, info, userupp)
		end

	invoke_qdget_pic_upp (dataptr: POINTER; bytecount: INTEGER; userupp: POINTER) is
		local
		do
			invoke_qdget_pic_upp_external (dataptr, bytecount, userupp)
		end

	invoke_qdput_pic_upp (dataptr: POINTER; bytecount: INTEGER; userupp: POINTER) is
		local
		do
			invoke_qdput_pic_upp_external (dataptr, bytecount, userupp)
		end

	invoke_qdopcode_upp (fromrect: POINTER; torect: POINTER; opcode: INTEGER; version: INTEGER; userupp: POINTER) is
		local
		do
			invoke_qdopcode_upp_external (fromrect, torect, opcode, version, userupp)
		end

	invoke_qdstd_glyphs_upp (datastream: POINTER; size: INTEGER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_qdstd_glyphs_upp_external (datastream, size, userupp)
		end

	invoke_qdjshield_cursor_upp (left: INTEGER; top: INTEGER; right: INTEGER; bottom: INTEGER; userupp: POINTER) is
		local
		do
			invoke_qdjshield_cursor_upp_external (left, top, right, bottom, userupp)
		end

	new_drag_gray_rgn_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_drag_gray_rgn_upp_external (userroutine)
		end

	new_color_search_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_color_search_upp_external (userroutine)
		end

	new_color_complement_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_color_complement_upp_external (userroutine)
		end

	dispose_drag_gray_rgn_upp (userupp: POINTER) is
		local
		do
			dispose_drag_gray_rgn_upp_external (userupp)
		end

	dispose_color_search_upp (userupp: POINTER) is
		local
		do
			dispose_color_search_upp_external (userupp)
		end

	dispose_color_complement_upp (userupp: POINTER) is
		local
		do
			dispose_color_complement_upp_external (userupp)
		end

	invoke_drag_gray_rgn_upp (userupp: POINTER) is
		local
		do
			invoke_drag_gray_rgn_upp_external (userupp)
		end

	invoke_color_search_upp (rgb: POINTER; position: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_color_search_upp_external (rgb, position, userupp)
		end

	invoke_color_complement_upp (rgb: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_color_complement_upp_external (rgb, userupp)
		end

	new_device_loop_drawing_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_device_loop_drawing_upp_external (userroutine)
		end

	dispose_device_loop_drawing_upp (userupp: POINTER) is
		local
		do
			dispose_device_loop_drawing_upp_external (userupp)
		end

	invoke_device_loop_drawing_upp (depth: INTEGER; deviceflags: INTEGER; targetdevice: POINTER; userdata: INTEGER; userupp: POINTER) is
		local
		do
			invoke_device_loop_drawing_upp_external (depth, deviceflags, targetdevice, userdata, userupp)
		end

	lock_port_bits (port: POINTER): INTEGER is
		local
		do
			Result := lock_port_bits_external (port)
		end

	unlock_port_bits (port: POINTER): INTEGER is
		local
		do
			Result := unlock_port_bits_external (port)
		end

	new_region_to_rects_upp (userroutine: POINTER): POINTER is
		local
		do
			Result := new_region_to_rects_upp_external (userroutine)
		end

	dispose_region_to_rects_upp (userupp: POINTER) is
		local
		do
			dispose_region_to_rects_upp_external (userupp)
		end

	invoke_region_to_rects_upp (message: INTEGER; rgn: POINTER; rect: POINTER; refcon: POINTER; userupp: POINTER): INTEGER is
		local
		do
			Result := invoke_region_to_rects_upp_external (message, rgn, rect, refcon, userupp)
		end

	qdregion_to_rects (rgn: POINTER; dir: INTEGER; proc: POINTER; userdata: POINTER): INTEGER is
		local
		do
			Result := qdregion_to_rects_external (rgn, dir, proc, userdata)
		end

	set_port (port: POINTER) is
		local
		do
			set_port_external (port)
		end

	get_port (port: POINTER) is
		local
		do
			get_port_external (port)
		end

	qdswap_port (innewport: POINTER; outoldport: POINTER): INTEGER is
		local
		do
			Result := qdswap_port_external (innewport, outoldport)
		end

	graf_device (device: INTEGER) is
		local
		do
			graf_device_external (device)
		end

	set_port_bits (bm: POINTER) is
		local
		do
			set_port_bits_external (bm)
		end

	port_size (width: INTEGER; height: INTEGER) is
		local
		do
			port_size_external (width, height)
		end

	move_port_to (leftglobal: INTEGER; topglobal: INTEGER) is
		local
		do
			move_port_to_external (leftglobal, topglobal)
		end

	set_origin (h: INTEGER; v: INTEGER) is
		local
		do
			set_origin_external (h, v)
		end

	set_clip (rgn: POINTER) is
		local
		do
			set_clip_external (rgn)
		end

	get_clip (rgn: POINTER) is
		local
		do
			get_clip_external (rgn)
		end

	clip_rect (r: POINTER) is
		local
		do
			clip_rect_external (r)
		end

	back_pat (pat: POINTER) is
		local
		do
			back_pat_external (pat)
		end

	init_cursor is
		local
		do
			init_cursor_external
		end

	set_cursor (crsr: POINTER) is
		local
		do
			set_cursor_external (crsr)
		end

	hide_cursor is
		local
		do
			hide_cursor_external
		end

	show_cursor is
		local
		do
			show_cursor_external
		end

	obscure_cursor is
		local
		do
			obscure_cursor_external
		end

	hide_pen is
		local
		do
			hide_pen_external
		end

	show_pen is
		local
		do
			show_pen_external
		end

	get_pen (pt: POINTER) is
		local
		do
			get_pen_external (pt)
		end

	get_pen_state (pnstate: POINTER) is
		local
		do
			get_pen_state_external (pnstate)
		end

	set_pen_state (pnstate: POINTER) is
		local
		do
			set_pen_state_external (pnstate)
		end

	pen_size (width: INTEGER; height: INTEGER) is
		local
		do
			pen_size_external (width, height)
		end

	pen_mode (mode: INTEGER) is
		local
		do
			pen_mode_external (mode)
		end

	pen_pat (pat: POINTER) is
		local
		do
			pen_pat_external (pat)
		end

	pen_normal is
		local
		do
			pen_normal_external
		end

	move_to (h: INTEGER; v: INTEGER) is
		local
		do
			move_to_external (h, v)
		end

	move (dh: INTEGER; dv: INTEGER) is
		local
		do
			move_external (dh, dv)
		end

	line_to (h: INTEGER; v: INTEGER) is
		local
		do
			line_to_external (h, v)
		end

	line (dh: INTEGER; dv: INTEGER) is
		local
		do
			line_external (dh, dv)
		end

	fore_color (color: INTEGER) is
		local
		do
			fore_color_external (color)
		end

	back_color (color: INTEGER) is
		local
		do
			back_color_external (color)
		end

	color_bit (whichbit: INTEGER) is
		local
		do
			color_bit_external (whichbit)
		end

	set_rect (r: POINTER; left: INTEGER; top: INTEGER; right: INTEGER; bottom: INTEGER) is
		local
		do
			set_rect_external (r, left, top, right, bottom)
		end

	offset_rect (r: POINTER; dh: INTEGER; dv: INTEGER) is
		local
		do
			offset_rect_external (r, dh, dv)
		end

	inset_rect (r: POINTER; dh: INTEGER; dv: INTEGER) is
		local
		do
			inset_rect_external (r, dh, dv)
		end

	sect_rect (src1: POINTER; src2: POINTER; dstrect: POINTER): INTEGER is
		local
		do
			Result := sect_rect_external (src1, src2, dstrect)
		end

	union_rect (src1: POINTER; src2: POINTER; dstrect: POINTER) is
		local
		do
			union_rect_external (src1, src2, dstrect)
		end

	equal_rect (rect1: POINTER; rect2: POINTER): INTEGER is
		local
		do
			Result := equal_rect_external (rect1, rect2)
		end

	empty_rect (r: POINTER): INTEGER is
		local
		do
			Result := empty_rect_external (r)
		end

	frame_rect (r: POINTER) is
		local
		do
			frame_rect_external (r)
		end

	paint_rect (r: POINTER) is
		local
		do
			paint_rect_external (r)
		end

	erase_rect (r: POINTER) is
		local
		do
			erase_rect_external (r)
		end

	invert_rect (r: POINTER) is
		local
		do
			invert_rect_external (r)
		end

	fill_rect (r: POINTER; pat: POINTER) is
		local
		do
			fill_rect_external (r, pat)
		end

	frame_oval (r: POINTER) is
		local
		do
			frame_oval_external (r)
		end

	paint_oval (r: POINTER) is
		local
		do
			paint_oval_external (r)
		end

	erase_oval (r: POINTER) is
		local
		do
			erase_oval_external (r)
		end

	invert_oval (r: POINTER) is
		local
		do
			invert_oval_external (r)
		end

	fill_oval (r: POINTER; pat: POINTER) is
		local
		do
			fill_oval_external (r, pat)
		end

	frame_round_rect (r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER) is
		local
		do
			frame_round_rect_external (r, ovalwidth, ovalheight)
		end

	paint_round_rect (r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER) is
		local
		do
			paint_round_rect_external (r, ovalwidth, ovalheight)
		end

	erase_round_rect (r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER) is
		local
		do
			erase_round_rect_external (r, ovalwidth, ovalheight)
		end

	invert_round_rect (r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER) is
		local
		do
			invert_round_rect_external (r, ovalwidth, ovalheight)
		end

	fill_round_rect (r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER; pat: POINTER) is
		local
		do
			fill_round_rect_external (r, ovalwidth, ovalheight, pat)
		end

	frame_arc (r: POINTER; startangle: INTEGER; arcangle: INTEGER) is
		local
		do
			frame_arc_external (r, startangle, arcangle)
		end

	paint_arc (r: POINTER; startangle: INTEGER; arcangle: INTEGER) is
		local
		do
			paint_arc_external (r, startangle, arcangle)
		end

	erase_arc (r: POINTER; startangle: INTEGER; arcangle: INTEGER) is
		local
		do
			erase_arc_external (r, startangle, arcangle)
		end

	invert_arc (r: POINTER; startangle: INTEGER; arcangle: INTEGER) is
		local
		do
			invert_arc_external (r, startangle, arcangle)
		end

	fill_arc (r: POINTER; startangle: INTEGER; arcangle: INTEGER; pat: POINTER) is
		local
		do
			fill_arc_external (r, startangle, arcangle, pat)
		end

	new_rgn: POINTER is
		local
		do
			Result := new_rgn_external
		end

	open_rgn is
		local
		do
			open_rgn_external
		end

	close_rgn (dstrgn: POINTER) is
		local
		do
			close_rgn_external (dstrgn)
		end

	bit_map_to_region (region: POINTER; bmap: POINTER): INTEGER is
		local
		do
			Result := bit_map_to_region_external (region, bmap)
		end

	rgn_to_handle (region: POINTER; flattenedrgndatahdl: POINTER) is
		local
		do
			rgn_to_handle_external (region, flattenedrgndatahdl)
		end

	handle_to_rgn (oldregion: POINTER; region: POINTER) is
		local
		do
			handle_to_rgn_external (oldregion, region)
		end

	dispose_rgn (rgn: POINTER) is
		local
		do
			dispose_rgn_external (rgn)
		end

	copy_rgn (srcrgn: POINTER; dstrgn: POINTER) is
		local
		do
			copy_rgn_external (srcrgn, dstrgn)
		end

	set_empty_rgn (rgn: POINTER) is
		local
		do
			set_empty_rgn_external (rgn)
		end

	set_rect_rgn (rgn: POINTER; left: INTEGER; top: INTEGER; right: INTEGER; bottom: INTEGER) is
		local
		do
			set_rect_rgn_external (rgn, left, top, right, bottom)
		end

	rect_rgn (rgn: POINTER; r: POINTER) is
		local
		do
			rect_rgn_external (rgn, r)
		end

	offset_rgn (rgn: POINTER; dh: INTEGER; dv: INTEGER) is
		local
		do
			offset_rgn_external (rgn, dh, dv)
		end

	inset_rgn (rgn: POINTER; dh: INTEGER; dv: INTEGER) is
		local
		do
			inset_rgn_external (rgn, dh, dv)
		end

	sect_rgn (srcrgna: POINTER; srcrgnb: POINTER; dstrgn: POINTER) is
		local
		do
			sect_rgn_external (srcrgna, srcrgnb, dstrgn)
		end

	union_rgn (srcrgna: POINTER; srcrgnb: POINTER; dstrgn: POINTER) is
		local
		do
			union_rgn_external (srcrgna, srcrgnb, dstrgn)
		end

	diff_rgn (srcrgna: POINTER; srcrgnb: POINTER; dstrgn: POINTER) is
		local
		do
			diff_rgn_external (srcrgna, srcrgnb, dstrgn)
		end

	xor_rgn (srcrgna: POINTER; srcrgnb: POINTER; dstrgn: POINTER) is
		local
		do
			xor_rgn_external (srcrgna, srcrgnb, dstrgn)
		end

	rect_in_rgn (r: POINTER; rgn: POINTER): INTEGER is
		local
		do
			Result := rect_in_rgn_external (r, rgn)
		end

	equal_rgn (rgna: POINTER; rgnb: POINTER): INTEGER is
		local
		do
			Result := equal_rgn_external (rgna, rgnb)
		end

	empty_rgn (rgn: POINTER): INTEGER is
		local
		do
			Result := empty_rgn_external (rgn)
		end

	frame_rgn (rgn: POINTER) is
		local
		do
			frame_rgn_external (rgn)
		end

	paint_rgn (rgn: POINTER) is
		local
		do
			paint_rgn_external (rgn)
		end

	erase_rgn (rgn: POINTER) is
		local
		do
			erase_rgn_external (rgn)
		end

	invert_rgn (rgn: POINTER) is
		local
		do
			invert_rgn_external (rgn)
		end

	fill_rgn (rgn: POINTER; pat: POINTER) is
		local
		do
			fill_rgn_external (rgn, pat)
		end

	scroll_rect (r: POINTER; dh: INTEGER; dv: INTEGER; updatergn: POINTER) is
		local
		do
			scroll_rect_external (r, dh, dv, updatergn)
		end

	copy_bits (srcbits: POINTER; dstbits: POINTER; srcrect: POINTER; dstrect: POINTER; mode: INTEGER; maskrgn: POINTER) is
		local
		do
			copy_bits_external (srcbits, dstbits, srcrect, dstrect, mode, maskrgn)
		end

	seed_fill (srcptr: POINTER; dstptr: POINTER; srcrow: INTEGER; dstrow: INTEGER; height: INTEGER; words: INTEGER; seedh: INTEGER; seedv: INTEGER) is
		local
		do
			seed_fill_external (srcptr, dstptr, srcrow, dstrow, height, words, seedh, seedv)
		end

	calc_mask (srcptr: POINTER; dstptr: POINTER; srcrow: INTEGER; dstrow: INTEGER; height: INTEGER; words: INTEGER) is
		local
		do
			calc_mask_external (srcptr, dstptr, srcrow, dstrow, height, words)
		end

	copy_mask (srcbits: POINTER; maskbits: POINTER; dstbits: POINTER; srcrect: POINTER; maskrect: POINTER; dstrect: POINTER) is
		local
		do
			copy_mask_external (srcbits, maskbits, dstbits, srcrect, maskrect, dstrect)
		end

	open_picture (picframe: POINTER): POINTER is
		local
		do
			Result := open_picture_external (picframe)
		end

	pic_comment (kind: INTEGER; datasize: INTEGER; datahandle: POINTER) is
		local
		do
			pic_comment_external (kind, datasize, datahandle)
		end

	close_picture is
		local
		do
			close_picture_external
		end

	qdget_picture_bounds (pich: POINTER; outrect: POINTER): POINTER is
		local
		do
			Result := qdget_picture_bounds_external (pich, outrect)
		end

	draw_picture (mypicture: POINTER; dstrect: POINTER) is
		local
		do
			draw_picture_external (mypicture, dstrect)
		end

	kill_picture (mypicture: POINTER) is
		local
		do
			kill_picture_external (mypicture)
		end

	open_poly: POINTER is
		local
		do
			Result := open_poly_external
		end

	close_poly is
		local
		do
			close_poly_external
		end

	kill_poly (poly: POINTER) is
		local
		do
			kill_poly_external (poly)
		end

	offset_poly (poly: POINTER; dh: INTEGER; dv: INTEGER) is
		local
		do
			offset_poly_external (poly, dh, dv)
		end

	frame_poly (poly: POINTER) is
		local
		do
			frame_poly_external (poly)
		end

	paint_poly (poly: POINTER) is
		local
		do
			paint_poly_external (poly)
		end

	erase_poly (poly: POINTER) is
		local
		do
			erase_poly_external (poly)
		end

	invert_poly (poly: POINTER) is
		local
		do
			invert_poly_external (poly)
		end

	fill_poly (poly: POINTER; pat: POINTER) is
		local
		do
			fill_poly_external (poly, pat)
		end

	set_pt (pt: POINTER; h: INTEGER; v: INTEGER) is
		local
		do
			set_pt_external (pt, h, v)
		end

	local_to_global (pt: POINTER) is
		local
		do
			local_to_global_external (pt)
		end

	global_to_local (pt: POINTER) is
		local
		do
			global_to_local_external (pt)
		end

	random: INTEGER is
		local
		do
			Result := random_external
		end

	stuff_hex (thingptr: POINTER; s: POINTER) is
		local
		do
			stuff_hex_external (thingptr, s)
		end

	get_pixel (h: INTEGER; v: INTEGER): INTEGER is
		local
		do
			Result := get_pixel_external (h, v)
		end

	scale_pt (pt: POINTER; srcrect: POINTER; dstrect: POINTER) is
		local
		do
			scale_pt_external (pt, srcrect, dstrect)
		end

	map_pt (pt: POINTER; srcrect: POINTER; dstrect: POINTER) is
		local
		do
			map_pt_external (pt, srcrect, dstrect)
		end

	map_rect (r: POINTER; srcrect: POINTER; dstrect: POINTER) is
		local
		do
			map_rect_external (r, srcrect, dstrect)
		end

	map_rgn (rgn: POINTER; srcrect: POINTER; dstrect: POINTER) is
		local
		do
			map_rgn_external (rgn, srcrect, dstrect)
		end

	map_poly (poly: POINTER; srcrect: POINTER; dstrect: POINTER) is
		local
		do
			map_poly_external (poly, srcrect, dstrect)
		end

	set_std_procs (procs: POINTER) is
		local
		do
			set_std_procs_external (procs)
		end

	std_rect (verb: INTEGER; r: POINTER) is
		local
		do
			std_rect_external (verb, r)
		end

	std_rrect (verb: INTEGER; r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER) is
		local
		do
			std_rrect_external (verb, r, ovalwidth, ovalheight)
		end

	std_oval (verb: INTEGER; r: POINTER) is
		local
		do
			std_oval_external (verb, r)
		end

	std_arc (verb: INTEGER; r: POINTER; startangle: INTEGER; arcangle: INTEGER) is
		local
		do
			std_arc_external (verb, r, startangle, arcangle)
		end

	std_poly (verb: INTEGER; poly: POINTER) is
		local
		do
			std_poly_external (verb, poly)
		end

	std_rgn (verb: INTEGER; rgn: POINTER) is
		local
		do
			std_rgn_external (verb, rgn)
		end

	std_bits (srcbits: POINTER; srcrect: POINTER; dstrect: POINTER; mode: INTEGER; maskrgn: POINTER) is
		local
		do
			std_bits_external (srcbits, srcrect, dstrect, mode, maskrgn)
		end

	std_comment (kind: INTEGER; datasize: INTEGER; datahandle: POINTER) is
		local
		do
			std_comment_external (kind, datasize, datahandle)
		end

	std_get_pic (dataptr: POINTER; bytecount: INTEGER) is
		local
		do
			std_get_pic_external (dataptr, bytecount)
		end

	std_put_pic (dataptr: POINTER; bytecount: INTEGER) is
		local
		do
			std_put_pic_external (dataptr, bytecount)
		end

	std_opcode (fromrect: POINTER; torect: POINTER; opcode: INTEGER; version: INTEGER) is
		local
		do
			std_opcode_external (fromrect, torect, opcode, version)
		end

	add_pt (src: POINTER; dst: POINTER) is
		local
		do
			add_pt_external (src, dst)
		end

	equal_pt (pt1: POINTER; pt2: POINTER): INTEGER is
		local
		do
			Result := equal_pt_external (pt1, pt2)
		end

	pt_in_rect (pt: POINTER; r: POINTER): INTEGER is
		local
		do
			Result := pt_in_rect_external (pt, r)
		end

	pt2rect (pt1: POINTER; pt2: POINTER; dstrect: POINTER) is
		local
		do
			pt2rect_external (pt1, pt2, dstrect)
		end

	pt_to_angle (r: POINTER; pt: POINTER; angle: POINTER) is
		local
		do
			pt_to_angle_external (r, pt, angle)
		end

	sub_pt (src: POINTER; dst: POINTER) is
		local
		do
			sub_pt_external (src, dst)
		end

	pt_in_rgn (pt: POINTER; rgn: POINTER): INTEGER is
		local
		do
			Result := pt_in_rgn_external (pt, rgn)
		end

	std_line (newpt: POINTER) is
		local
		do
			std_line_external (newpt)
		end

	new_pix_map: POINTER is
		local
		do
			Result := new_pix_map_external
		end

	dispose_pix_map (pm: POINTER) is
		local
		do
			dispose_pix_map_external (pm)
		end

	copy_pix_map (srcpm: POINTER; dstpm: POINTER) is
		local
		do
			copy_pix_map_external (srcpm, dstpm)
		end

	new_pix_pat: POINTER is
		local
		do
			Result := new_pix_pat_external
		end

	dispose_pix_pat (pp: POINTER) is
		local
		do
			dispose_pix_pat_external (pp)
		end

	copy_pix_pat (srcpp: POINTER; dstpp: POINTER) is
		local
		do
			copy_pix_pat_external (srcpp, dstpp)
		end

	pen_pix_pat (pp: POINTER) is
		local
		do
			pen_pix_pat_external (pp)
		end

	back_pix_pat (pp: POINTER) is
		local
		do
			back_pix_pat_external (pp)
		end

	get_pix_pat (patid: INTEGER): POINTER is
		local
		do
			Result := get_pix_pat_external (patid)
		end

	make_rgbpat (pp: POINTER; mycolor: POINTER) is
		local
		do
			make_rgbpat_external (pp, mycolor)
		end

	fill_crect (r: POINTER; pp: POINTER) is
		local
		do
			fill_crect_external (r, pp)
		end

	fill_coval (r: POINTER; pp: POINTER) is
		local
		do
			fill_coval_external (r, pp)
		end

	fill_cround_rect (r: POINTER; ovalwidth: INTEGER; ovalheight: INTEGER; pp: POINTER) is
		local
		do
			fill_cround_rect_external (r, ovalwidth, ovalheight, pp)
		end

	fill_carc (r: POINTER; startangle: INTEGER; arcangle: INTEGER; pp: POINTER) is
		local
		do
			fill_carc_external (r, startangle, arcangle, pp)
		end

	fill_crgn (rgn: POINTER; pp: POINTER) is
		local
		do
			fill_crgn_external (rgn, pp)
		end

	fill_cpoly (poly: POINTER; pp: POINTER) is
		local
		do
			fill_cpoly_external (poly, pp)
		end

	rgbfore_color (color: POINTER) is
		local
		do
			rgbfore_color_external (color)
		end

	rgbback_color (color: POINTER) is
		local
		do
			rgbback_color_external (color)
		end

	set_cpixel (h: INTEGER; v: INTEGER; cpix: POINTER) is
		local
		do
			set_cpixel_external (h, v, cpix)
		end

	set_port_pix (pm: POINTER) is
		local
		do
			set_port_pix_external (pm)
		end

	get_cpixel (h: INTEGER; v: INTEGER; cpix: POINTER) is
		local
		do
			get_cpixel_external (h, v, cpix)
		end

	get_fore_color (color: POINTER) is
		local
		do
			get_fore_color_external (color)
		end

	get_back_color (color: POINTER) is
		local
		do
			get_back_color_external (color)
		end

	seed_cfill (srcbits: POINTER; dstbits: POINTER; srcrect: POINTER; dstrect: POINTER; seedh: INTEGER; seedv: INTEGER; matchproc: POINTER; matchdata: INTEGER) is
		local
		do
			seed_cfill_external (srcbits, dstbits, srcrect, dstrect, seedh, seedv, matchproc, matchdata)
		end

	calc_cmask (srcbits: POINTER; dstbits: POINTER; srcrect: POINTER; dstrect: POINTER; seedrgb: POINTER; matchproc: POINTER; matchdata: INTEGER) is
		local
		do
			calc_cmask_external (srcbits, dstbits, srcrect, dstrect, seedrgb, matchproc, matchdata)
		end

	open_cpicture (newheader: POINTER): POINTER is
		local
		do
			Result := open_cpicture_external (newheader)
		end

	op_color (color: POINTER) is
		local
		do
			op_color_external (color)
		end

	hilite_color (color: POINTER) is
		local
		do
			hilite_color_external (color)
		end

	dispose_ctable (ctable: POINTER) is
		local
		do
			dispose_ctable_external (ctable)
		end

	get_ctable (ctid: INTEGER): POINTER is
		local
		do
			Result := get_ctable_external (ctid)
		end

	get_ccursor (crsrid: INTEGER): POINTER is
		local
		do
			Result := get_ccursor_external (crsrid)
		end

	set_ccursor (ccrsr: POINTER) is
		local
		do
			set_ccursor_external (ccrsr)
		end

	alloc_cursor is
		local
		do
			alloc_cursor_external
		end

	dispose_ccursor (ccrsr: POINTER) is
		local
		do
			dispose_ccursor_external (ccrsr)
		end

	set_std_cprocs (procs: POINTER) is
		local
		do
			set_std_cprocs_external (procs)
		end

	get_max_device (globalrect: POINTER): POINTER is
		local
		do
			Result := get_max_device_external (globalrect)
		end

	get_ctseed: INTEGER is
		local
		do
			Result := get_ctseed_external
		end

	get_device_list: POINTER is
		local
		do
			Result := get_device_list_external
		end

	get_main_device: POINTER is
		local
		do
			Result := get_main_device_external
		end

	get_next_device (curdevice: POINTER): POINTER is
		local
		do
			Result := get_next_device_external (curdevice)
		end

	test_device_attribute (gdh: POINTER; attribute: INTEGER): INTEGER is
		local
		do
			Result := test_device_attribute_external (gdh, attribute)
		end

	set_device_attribute (gdh: POINTER; attribute: INTEGER; value: INTEGER) is
		local
		do
			set_device_attribute_external (gdh, attribute, value)
		end

	init_gdevice (qdrefnum: INTEGER; mode: INTEGER; gdh: POINTER) is
		local
		do
			init_gdevice_external (qdrefnum, mode, gdh)
		end

	new_gdevice (refnum: INTEGER; mode: INTEGER): POINTER is
		local
		do
			Result := new_gdevice_external (refnum, mode)
		end

	dispose_gdevice (gdh: POINTER) is
		local
		do
			dispose_gdevice_external (gdh)
		end

	set_gdevice (gd: POINTER) is
		local
		do
			set_gdevice_external (gd)
		end

	get_gdevice: POINTER is
		local
		do
			Result := get_gdevice_external
		end

	color2index (mycolor: POINTER): INTEGER is
		local
		do
			Result := color2index_external (mycolor)
		end

	index2color (index: INTEGER; acolor: POINTER) is
		local
		do
			index2color_external (index, acolor)
		end

	invert_color (mycolor: POINTER) is
		local
		do
			invert_color_external (mycolor)
		end

	real_color (color: POINTER): INTEGER is
		local
		do
			Result := real_color_external (color)
		end

	get_sub_table (mycolors: POINTER; itabres: INTEGER; targettbl: POINTER) is
		local
		do
			get_sub_table_external (mycolors, itabres, targettbl)
		end

	make_itable (ctabh: POINTER; itabh: POINTER; res: INTEGER) is
		local
		do
			make_itable_external (ctabh, itabh, res)
		end

	add_search (searchproc: POINTER) is
		local
		do
			add_search_external (searchproc)
		end

	add_comp (compproc: POINTER) is
		local
		do
			add_comp_external (compproc)
		end

	del_search (searchproc: POINTER) is
		local
		do
			del_search_external (searchproc)
		end

	del_comp (compproc: POINTER) is
		local
		do
			del_comp_external (compproc)
		end

	set_client_id (id: INTEGER) is
		local
		do
			set_client_id_external (id)
		end

	protect_entry (index: INTEGER; protect: INTEGER) is
		local
		do
			protect_entry_external (index, protect)
		end

	reserve_entry (index: INTEGER; reserve: INTEGER) is
		local
		do
			reserve_entry_external (index, reserve)
		end

	set_entries (start: INTEGER; count: INTEGER; atable: POINTER) is
		local
		do
			set_entries_external (start, count, atable)
		end

	save_entries (srctable: POINTER; resulttable: POINTER; selection: POINTER) is
		local
		do
			save_entries_external (srctable, resulttable, selection)
		end

	restore_entries (srctable: POINTER; dsttable: POINTER; selection: POINTER) is
		local
		do
			restore_entries_external (srctable, dsttable, selection)
		end

	qderror: INTEGER is
		local
		do
			Result := qderror_external
		end

	copy_deep_mask (srcbits: POINTER; maskbits: POINTER; dstbits: POINTER; srcrect: POINTER; maskrect: POINTER; dstrect: POINTER; mode: INTEGER; maskrgn: POINTER) is
		local
		do
			copy_deep_mask_external (srcbits, maskbits, dstbits, srcrect, maskrect, dstrect, mode, maskrgn)
		end

	device_loop (drawingrgn: POINTER; drawingproc: POINTER; userdata: INTEGER; flags: INTEGER) is
		local
		do
			device_loop_external (drawingrgn, drawingproc, userdata, flags)
		end

	get_mask_table: POINTER is
		local
		do
			Result := get_mask_table_external
		end

	get_pattern (patternid: INTEGER): POINTER is
		local
		do
			Result := get_pattern_external (patternid)
		end

	get_cursor (cursorid: INTEGER): POINTER is
		local
		do
			Result := get_cursor_external (cursorid)
		end

	get_picture (pictureid: INTEGER): POINTER is
		local
		do
			Result := get_picture_external (pictureid)
		end

	delta_point (pta: POINTER; ptb: POINTER): INTEGER is
		local
		do
			Result := delta_point_external (pta, ptb)
		end

	shield_cursor (shieldrect: POINTER; offsetpt: POINTER) is
		local
		do
			shield_cursor_external (shieldrect, offsetpt)
		end

	screen_res (scrnhres: POINTER; scrnvres: POINTER) is
		local
		do
			screen_res_external (scrnhres, scrnvres)
		end

	get_ind_pattern (thepat: POINTER; patternlistid: INTEGER; index: INTEGER) is
		local
		do
			get_ind_pattern_external (thepat, patternlistid, index)
		end

	deltapoint (pta: POINTER; ptb: POINTER): INTEGER is
		local
		do
			Result := deltapoint_external (pta, ptb)
		end

	pack_bits (srcptr: POINTER; dstptr: POINTER; srcbytes: INTEGER) is
		local
		do
			pack_bits_external (srcptr, dstptr, srcbytes)
		end

	unpack_bits (srcptr: POINTER; dstptr: POINTER; dstbytes: INTEGER) is
		local
		do
			unpack_bits_external (srcptr, dstptr, dstbytes)
		end

	slope_from_angle (angle: INTEGER): INTEGER is
		local
		do
			Result := slope_from_angle_external (angle)
		end

	angle_from_slope (slope: INTEGER): INTEGER is
		local
		do
			Result := angle_from_slope_external (slope)
		end

	get_port_custom_xfer_proc (port: POINTER; proc: POINTER; flags: POINTER; refcon: POINTER): INTEGER is
		local
		do
			Result := get_port_custom_xfer_proc_external (port, proc, flags, refcon)
		end

	set_port_custom_xfer_proc (port: POINTER; proc: POINTER; flags: INTEGER; refcon: INTEGER): INTEGER is
		local
		do
			Result := set_port_custom_xfer_proc_external (port, proc, flags, refcon)
		end

	open_cursor_component (c: POINTER; ci: POINTER): INTEGER is
		local
		do
			Result := open_cursor_component_external (c, ci)
		end

	close_cursor_component (ci: POINTER): INTEGER is
		local
		do
			Result := close_cursor_component_external (ci)
		end

	set_cursor_component (ci: POINTER): INTEGER is
		local
		do
			Result := set_cursor_component_external (ci)
		end

	cursor_component_changed (ci: POINTER): INTEGER is
		local
		do
			Result := cursor_component_changed_external (ci)
		end

	cursor_component_set_data (ci: POINTER; data: INTEGER): INTEGER is
		local
		do
			Result := cursor_component_set_data_external (ci, data)
		end

	cwmatch_pix_map (cw: POINTER; mypixmap: POINTER; progressproc: POINTER; refcon: POINTER): INTEGER is
		local
		do
			Result := cwmatch_pix_map_external (cw, mypixmap, progressproc, refcon)
		end

	cwcheck_pix_map (cw: POINTER; mypixmap: POINTER; progressproc: POINTER; refcon: POINTER; resultbitmap: POINTER): INTEGER is
		local
		do
			Result := cwcheck_pix_map_external (cw, mypixmap, progressproc, refcon, resultbitmap)
		end

	ncmbegin_matching (src: POINTER; dst: POINTER; myref: POINTER): INTEGER is
		local
		do
			Result := ncmbegin_matching_external (src, dst, myref)
		end

	cmend_matching (myref: POINTER) is
		local
		do
			cmend_matching_external (myref)
		end

	ncmdraw_matched_picture (mypicture: POINTER; dst: POINTER; myrect: POINTER) is
		local
		do
			ncmdraw_matched_picture_external (mypicture, dst, myrect)
		end

	cmenable_matching_comment (enableit: INTEGER) is
		local
		do
			cmenable_matching_comment_external (enableit)
		end

	ncmuse_profile_comment (prof: POINTER; flags: INTEGER): INTEGER is
		local
		do
			Result := ncmuse_profile_comment_external (prof, flags)
		end

	is_valid_port (port: POINTER): INTEGER is
		local
		do
			Result := is_valid_port_external (port)
		end

	is_valid_rgn_handle (rgn: POINTER): INTEGER is
		local
		do
			Result := is_valid_rgn_handle_external (rgn)
		end

	get_port_pix_map (port: POINTER): POINTER is
		local
		do
			Result := get_port_pix_map_external (port)
		end

	get_port_bit_map_for_copy_bits (port: POINTER): POINTER is
		local
		do
			Result := get_port_bit_map_for_copy_bits_external (port)
		end

	get_port_bounds (port: POINTER; rect: POINTER): POINTER is
		local
		do
			Result := get_port_bounds_external (port, rect)
		end

	get_port_fore_color (port: POINTER; forecolor: POINTER): POINTER is
		local
		do
			Result := get_port_fore_color_external (port, forecolor)
		end

	get_port_back_color (port: POINTER; backcolor: POINTER): POINTER is
		local
		do
			Result := get_port_back_color_external (port, backcolor)
		end

	get_port_op_color (port: POINTER; opcolor: POINTER): POINTER is
		local
		do
			Result := get_port_op_color_external (port, opcolor)
		end

	get_port_hilite_color (port: POINTER; hilitecolor: POINTER): POINTER is
		local
		do
			Result := get_port_hilite_color_external (port, hilitecolor)
		end

	get_port_graf_procs (port: POINTER): POINTER is
		local
		do
			Result := get_port_graf_procs_external (port)
		end

	get_port_text_font (port: POINTER): INTEGER is
		local
		do
			Result := get_port_text_font_external (port)
		end

	get_port_text_face (port: POINTER): INTEGER is
		local
		do
			Result := get_port_text_face_external (port)
		end

	get_port_text_mode (port: POINTER): INTEGER is
		local
		do
			Result := get_port_text_mode_external (port)
		end

	get_port_text_size (port: POINTER): INTEGER is
		local
		do
			Result := get_port_text_size_external (port)
		end

	get_port_ch_extra (port: POINTER): INTEGER is
		local
		do
			Result := get_port_ch_extra_external (port)
		end

	get_port_frac_hpen_location (port: POINTER): INTEGER is
		local
		do
			Result := get_port_frac_hpen_location_external (port)
		end

	get_port_sp_extra (port: POINTER): INTEGER is
		local
		do
			Result := get_port_sp_extra_external (port)
		end

	get_port_pen_visibility (port: POINTER): INTEGER is
		local
		do
			Result := get_port_pen_visibility_external (port)
		end

	get_port_visible_region (port: POINTER; visrgn: POINTER): POINTER is
		local
		do
			Result := get_port_visible_region_external (port, visrgn)
		end

	get_port_clip_region (port: POINTER; cliprgn: POINTER): POINTER is
		local
		do
			Result := get_port_clip_region_external (port, cliprgn)
		end

	get_port_back_pix_pat (port: POINTER; backpattern: POINTER): POINTER is
		local
		do
			Result := get_port_back_pix_pat_external (port, backpattern)
		end

	get_port_pen_pix_pat (port: POINTER; penpattern: POINTER): POINTER is
		local
		do
			Result := get_port_pen_pix_pat_external (port, penpattern)
		end

	get_port_fill_pix_pat (port: POINTER; fillpattern: POINTER): POINTER is
		local
		do
			Result := get_port_fill_pix_pat_external (port, fillpattern)
		end

	get_port_pen_size (port: POINTER; pensize: POINTER): POINTER is
		local
		do
			Result := get_port_pen_size_external (port, pensize)
		end

	get_port_pen_mode (port: POINTER): INTEGER is
		local
		do
			Result := get_port_pen_mode_external (port)
		end

	get_port_pen_location (port: POINTER; penlocation: POINTER): POINTER is
		local
		do
			Result := get_port_pen_location_external (port, penlocation)
		end

	is_port_region_being_defined (port: POINTER): INTEGER is
		local
		do
			Result := is_port_region_being_defined_external (port)
		end

	is_port_picture_being_defined (port: POINTER): INTEGER is
		local
		do
			Result := is_port_picture_being_defined_external (port)
		end

	is_port_poly_being_defined (port: POINTER): INTEGER is
		local
		do
			Result := is_port_poly_being_defined_external (port)
		end

	is_port_offscreen (port: POINTER): INTEGER is
		local
		do
			Result := is_port_offscreen_external (port)
		end

	is_port_color (port: POINTER): INTEGER is
		local
		do
			Result := is_port_color_external (port)
		end

	is_port_visible_region_empty (port: POINTER): INTEGER is
		local
		do
			Result := is_port_visible_region_empty_external (port)
		end

	is_port_clip_region_empty (port: POINTER): INTEGER is
		local
		do
			Result := is_port_clip_region_empty_external (port)
		end

	sect_region_with_port_clip_region (port: POINTER; ioregion: POINTER) is
		local
		do
			sect_region_with_port_clip_region_external (port, ioregion)
		end

	sect_region_with_port_visible_region (port: POINTER; ioregion: POINTER) is
		local
		do
			sect_region_with_port_visible_region_external (port, ioregion)
		end

	swap_port_pic_save_handle (port: POINTER; inpicsavehdl: POINTER): POINTER is
		local
		do
			Result := swap_port_pic_save_handle_external (port, inpicsavehdl)
		end

	swap_port_poly_save_handle (port: POINTER; inpolysavehdl: POINTER): POINTER is
		local
		do
			Result := swap_port_poly_save_handle_external (port, inpolysavehdl)
		end

	swap_port_region_save_handle (port: POINTER; inregionsavehdl: POINTER): POINTER is
		local
		do
			Result := swap_port_region_save_handle_external (port, inregionsavehdl)
		end

	set_port_bounds (port: POINTER; rect: POINTER) is
		local
		do
			set_port_bounds_external (port, rect)
		end

	set_port_op_color (port: POINTER; opcolor: POINTER) is
		local
		do
			set_port_op_color_external (port, opcolor)
		end

	set_port_graf_procs (port: POINTER; procs: POINTER) is
		local
		do
			set_port_graf_procs_external (port, procs)
		end

	set_port_text_font (port: POINTER; txfont: INTEGER) is
		local
		do
			set_port_text_font_external (port, txfont)
		end

	set_port_text_size (port: POINTER; txsize: INTEGER) is
		local
		do
			set_port_text_size_external (port, txsize)
		end

	set_port_text_face (port: POINTER; face: INTEGER) is
		local
		do
			set_port_text_face_external (port, face)
		end

	set_port_text_mode (port: POINTER; mode: INTEGER) is
		local
		do
			set_port_text_mode_external (port, mode)
		end

	set_port_visible_region (port: POINTER; visrgn: POINTER) is
		local
		do
			set_port_visible_region_external (port, visrgn)
		end

	set_port_clip_region (port: POINTER; cliprgn: POINTER) is
		local
		do
			set_port_clip_region_external (port, cliprgn)
		end

	set_port_pen_pix_pat (port: POINTER; penpattern: POINTER) is
		local
		do
			set_port_pen_pix_pat_external (port, penpattern)
		end

	set_port_fill_pix_pat (port: POINTER; penpattern: POINTER) is
		local
		do
			set_port_fill_pix_pat_external (port, penpattern)
		end

	set_port_back_pix_pat (port: POINTER; backpattern: POINTER) is
		local
		do
			set_port_back_pix_pat_external (port, backpattern)
		end

	set_port_pen_size (port: POINTER; pensize: POINTER) is
		local
		do
			set_port_pen_size_external (port, pensize)
		end

	set_port_pen_mode (port: POINTER; penmode: INTEGER) is
		local
		do
			set_port_pen_mode_external (port, penmode)
		end

	set_port_frac_hpen_location (port: POINTER; pnlochfrac: INTEGER) is
		local
		do
			set_port_frac_hpen_location_external (port, pnlochfrac)
		end

	get_pix_bounds (pixmap: POINTER; bounds: POINTER): POINTER is
		local
		do
			Result := get_pix_bounds_external (pixmap, bounds)
		end

	get_pix_depth (pixmap: POINTER): INTEGER is
		local
		do
			Result := get_pix_depth_external (pixmap)
		end

	get_qdglobals_random_seed: INTEGER is
		local
		do
			Result := get_qdglobals_random_seed_external
		end

	get_qdglobals_screen_bits (screenbits: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_screen_bits_external (screenbits)
		end

	get_qdglobals_arrow (arrow: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_arrow_external (arrow)
		end

	get_qdglobals_dark_gray (dkgray: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_dark_gray_external (dkgray)
		end

	get_qdglobals_light_gray (ltgray: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_light_gray_external (ltgray)
		end

	get_qdglobals_gray (gray: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_gray_external (gray)
		end

	get_qdglobals_black (black: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_black_external (black)
		end

	get_qdglobals_white (white: POINTER): POINTER is
		local
		do
			Result := get_qdglobals_white_external (white)
		end

	get_qdglobals_the_port: POINTER is
		local
		do
			Result := get_qdglobals_the_port_external
		end

	set_qdglobals_random_seed (randomseed: INTEGER) is
		local
		do
			set_qdglobals_random_seed_external (randomseed)
		end

	set_qdglobals_arrow (arrow: POINTER) is
		local
		do
			set_qdglobals_arrow_external (arrow)
		end

	get_region_bounds (region: POINTER; bounds: POINTER): POINTER is
		local
		do
			Result := get_region_bounds_external (region, bounds)
		end

	is_region_rectangular (region: POINTER): INTEGER is
		local
		do
			Result := is_region_rectangular_external (region)
		end

	create_new_port: POINTER is
		local
		do
			Result := create_new_port_external
		end

	dispose_port (port: POINTER) is
		local
		do
			dispose_port_external (port)
		end

	set_qderror (err: INTEGER) is
		local
		do
			set_qderror_external (err)
		end

	qdlocal_to_global_point (port: POINTER; point: POINTER): POINTER is
		local
		do
			Result := qdlocal_to_global_point_external (port, point)
		end

	qdglobal_to_local_point (port: POINTER; point: POINTER): POINTER is
		local
		do
			Result := qdglobal_to_local_point_external (port, point)
		end

	qdlocal_to_global_rect (port: POINTER; bounds: POINTER): POINTER is
		local
		do
			Result := qdlocal_to_global_rect_external (port, bounds)
		end

	qdglobal_to_local_rect (port: POINTER; bounds: POINTER): POINTER is
		local
		do
			Result := qdglobal_to_local_rect_external (port, bounds)
		end

	qdlocal_to_global_region (port: POINTER; region: POINTER): POINTER is
		local
		do
			Result := qdlocal_to_global_region_external (port, region)
		end

	qdglobal_to_local_region (port: POINTER; region: POINTER): POINTER is
		local
		do
			Result := qdglobal_to_local_region_external (port, region)
		end

	qdis_port_buffered (port: POINTER): INTEGER is
		local
		do
			Result := qdis_port_buffered_external (port)
		end

	qdis_port_buffer_dirty (port: POINTER): INTEGER is
		local
		do
			Result := qdis_port_buffer_dirty_external (port)
		end

	qdflush_port_buffer (port: POINTER; region: POINTER) is
		local
		do
			qdflush_port_buffer_external (port, region)
		end

	qdget_dirty_region (port: POINTER; rgn: POINTER): INTEGER is
		local
		do
			Result := qdget_dirty_region_external (port, rgn)
		end

	qdset_dirty_region (port: POINTER; rgn: POINTER): INTEGER is
		local
		do
			Result := qdset_dirty_region_external (port, rgn)
		end

	qdadd_rect_to_dirty_region (inport: POINTER; inbounds: POINTER): INTEGER is
		local
		do
			Result := qdadd_rect_to_dirty_region_external (inport, inbounds)
		end

	qdadd_region_to_dirty_region (inport: POINTER; inregion: POINTER): INTEGER is
		local
		do
			Result := qdadd_region_to_dirty_region_external (inport, inregion)
		end

	create_cgcontext_for_port (inport: POINTER; outcontext: POINTER): INTEGER is
		local
		do
			Result := create_cgcontext_for_port_external (inport, outcontext)
		end

	clip_cgcontext_to_region (gc: POINTER; portrect: POINTER; region: POINTER): INTEGER is
		local
		do
			Result := clip_cgcontext_to_region_external (gc, portrect, region)
		end

	sync_cgcontext_origin_with_port (incontext: POINTER; port: POINTER): INTEGER is
		local
		do
			Result := sync_cgcontext_origin_with_port_external (incontext, port)
		end

	qdbegin_cgcontext (inport: POINTER; outcontext: POINTER): INTEGER is
		local
		do
			Result := qdbegin_cgcontext_external (inport, outcontext)
		end

	qdend_cgcontext (inport: POINTER; inoutcontext: POINTER): INTEGER is
		local
		do
			Result := qdend_cgcontext_external (inport, inoutcontext)
		end

	qdsave_region_bits (region: POINTER): POINTER is
		local
		do
			Result := qdsave_region_bits_external (region)
		end

	qdrestore_region_bits (region: POINTER; regionbits: POINTER): INTEGER is
		local
		do
			Result := qdrestore_region_bits_external (region, regionbits)
		end

	qddispose_region_bits (regionbits: POINTER): INTEGER is
		local
		do
			Result := qddispose_region_bits_external (regionbits)
		end

	create_new_port_for_cgdisplay_id (incgdisplayid: INTEGER): POINTER is
		local
		do
			Result := create_new_port_for_cgdisplay_id_external (incgdisplayid)
		end

	qddisplay_wait_cursor (forcewaitcursor: INTEGER) is
		local
		do
			qddisplay_wait_cursor_external (forcewaitcursor)
		end

	qdset_pattern_origin (origin: POINTER) is
		local
		do
			qdset_pattern_origin_external (origin)
		end

	qdget_pattern_origin (origin: POINTER) is
		local
		do
			qdget_pattern_origin_external (origin)
		end

	qdis_named_pix_map_cursor_registered (name: POINTER): INTEGER is
		local
		do
			Result := qdis_named_pix_map_cursor_registered_external (name)
		end

	qdregister_named_pix_map_cursor (crsrdata: POINTER; crsrmask: POINTER; hotspot: POINTER; name: POINTER): INTEGER is
		local
		do
			Result := qdregister_named_pix_map_cursor_external (crsrdata, crsrmask, hotspot, name)
		end

	qdunregister_named_pix_map_cursur (name: POINTER): INTEGER is
		local
		do
			Result := qdunregister_named_pix_map_cursur_external (name)
		end

	qdunregister_named_pix_map_cursor (name: POINTER): INTEGER is
		local
		do
			Result := qdunregister_named_pix_map_cursor_external (name)
		end

	qdset_named_pix_map_cursor (name: POINTER): INTEGER is
		local
		do
			Result := qdset_named_pix_map_cursor_external (name)
		end

	qdget_cursor_name_for_system_cursor (cursorid: INTEGER): POINTER is
		local
		do
			Result := qdget_cursor_name_for_system_cursor_external (cursorid)
		end

	qdset_cursor_scale (scale: REAL): INTEGER is
		local
		do
			Result := qdset_cursor_scale_external (scale)
		end

	qdget_cursor_scale (outscale: POINTER): INTEGER is
		local
		do
			Result := qdget_cursor_scale_external (outscale)
		end

	qdget_cursor_data (contextcursor: INTEGER; crsrdata: POINTER; hotspot: POINTER): INTEGER is
		local
		do
			Result := qdget_cursor_data_external (contextcursor, crsrdata, hotspot)
		end

	qdswap_text_flags (newflags: INTEGER): INTEGER is
		local
		do
			Result := qdswap_text_flags_external (newflags)
		end

	qdswap_port_text_flags (port: POINTER; newflags: INTEGER): INTEGER is
		local
		do
			Result := qdswap_port_text_flags_external (port, newflags)
		end

	qdget_cgdirect_display_id (ingdevice: POINTER): POINTER is
		local
		do
			Result := qdget_cgdirect_display_id_external (ingdevice)
		end

	lmget_scr_vres: INTEGER is
		local
		do
			Result := lmget_scr_vres_external
		end

	lmset_scr_vres (value: INTEGER) is
		local
		do
			lmset_scr_vres_external (value)
		end

	lmget_scr_hres: INTEGER is
		local
		do
			Result := lmget_scr_hres_external
		end

	lmset_scr_hres (value: INTEGER) is
		local
		do
			lmset_scr_hres_external (value)
		end

	lmget_main_device: POINTER is
		local
		do
			Result := lmget_main_device_external
		end

	lmset_main_device (value: POINTER) is
		local
		do
			lmset_main_device_external (value)
		end

	lmget_device_list: POINTER is
		local
		do
			Result := lmget_device_list_external
		end

	lmset_device_list (value: POINTER) is
		local
		do
			lmset_device_list_external (value)
		end

	lmget_qdcolors: POINTER is
		local
		do
			Result := lmget_qdcolors_external
		end

	lmset_qdcolors (value: POINTER) is
		local
		do
			lmset_qdcolors_external (value)
		end

	lmget_width_list_hand: POINTER is
		local
		do
			Result := lmget_width_list_hand_external
		end

	lmset_width_list_hand (value: POINTER) is
		local
		do
			lmset_width_list_hand_external (value)
		end

	lmget_hilite_mode: INTEGER is
		local
		do
			Result := lmget_hilite_mode_external
		end

	lmset_hilite_mode (value: INTEGER) is
		local
		do
			lmset_hilite_mode_external (value)
		end

	lmget_width_ptr: POINTER is
		local
		do
			Result := lmget_width_ptr_external
		end

	lmset_width_ptr (value: POINTER) is
		local
		do
			lmset_width_ptr_external (value)
		end

	lmget_width_tab_handle: POINTER is
		local
		do
			Result := lmget_width_tab_handle_external
		end

	lmset_width_tab_handle (value: POINTER) is
		local
		do
			lmset_width_tab_handle_external (value)
		end

	lmget_last_spextra: INTEGER is
		local
		do
			Result := lmget_last_spextra_external
		end

	lmset_last_spextra (value: INTEGER) is
		local
		do
			lmset_last_spextra_external (value)
		end

	lmget_last_fond: POINTER is
		local
		do
			Result := lmget_last_fond_external
		end

	lmset_last_fond (value: POINTER) is
		local
		do
			lmset_last_fond_external (value)
		end

	lmget_fract_enable: INTEGER is
		local
		do
			Result := lmget_fract_enable_external
		end

	lmset_fract_enable (value: INTEGER) is
		local
		do
			lmset_fract_enable_external (value)
		end

	lmget_the_gdevice: POINTER is
		local
		do
			Result := lmget_the_gdevice_external
		end

	lmset_the_gdevice (value: POINTER) is
		local
		do
			lmset_the_gdevice_external (value)
		end

	lmget_hilite_rgb (hilitergbvalue: POINTER) is
		local
		do
			lmget_hilite_rgb_external (hilitergbvalue)
		end

	lmset_hilite_rgb (hilitergbvalue: POINTER) is
		local
		do
			lmset_hilite_rgb_external (hilitergbvalue)
		end

	lmget_cursor_new: INTEGER is
		local
		do
			Result := lmget_cursor_new_external
		end

	lmset_cursor_new (value: INTEGER) is
		local
		do
			lmset_cursor_new_external (value)
		end

end
